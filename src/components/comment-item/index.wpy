<template>
  <view>
    <!-- 评论主体 -->
    <view>
      <!-- 发布人 -->
      <view class="user">
        <van-image
          :src="avatar"
          width="30"
          height="30"
          fit="cover"
          round
        />
        <label
          class="nickName"
          style="color:blue"
        >{{nickName}}</label>
        |
        <label>{{timeFormatter}}</label>
      </view>

      <!-- 评论内容 -->
      <view class="comment">{{content}}
        <!-- 回复 -->
        <view class="reply">
          <reply-item
            v-for="(item,index) in reply"
            :key="'reply'+index"
            :item="item"
            :time="item.createTime"
            @click.stop="itemReply(item.reply2CommentId,item.userId,item.nickName)"
          ></reply-item>
        </view>
      </view>
    </view>

  </view>
</template>

<script>
import wepy from '@wepy/core'
import eventHub from '@/common/eventHub'
import { getReply } from '@/api.js'
import moment from 'moment'
import 'moment/locale/zh-cn'

wepy.component({
  props: {
    commentId: {
      type: String,
      required: true
    },
    userId: {
      type: String,
      required: true
    },
    avatar: {
      type: String,
      required: true
    },
    nickName: {
      type: String,
      required: true
    },
    content: {
      type: String,
      required: true
    },
    time: {
      type: Date,
      required: true
    }
  },
  data: {
    reply: {}
  },
  computed: {
    timeFormatter() {
      return moment(this.time).fromNow()
    }
  },
  methods: {
    itemReply(commentId, userId, name) {
      eventHub.$emit('replyToReply', { commentId, userId, name })
    }

    // timeFormatter(time) {
    //   return moment(time).fromNow()
    // }
  },
  async attached() {
    // 组件加载时通过openid获取对应用户的头像、昵称
    // let { avatarUrl, nickName } = await getBasicInfo(this.userId)
    // this.user = { avatarUrl, nickName }
    // 在回复表中查询是否有回复
    let id = this.commentId
    let res = await getReply({ id })
    this.reply = res
    console.log(this.reply)

    eventHub.$on('upgrade', async () => {
      res = await getReply({ id })
      this.reply = res
    })
  }
})
</script>
<config>
{
  "usingComponents": {
    "van-image": "~@/components/vant/image",
    "reply-item":"~@/components/reply-item/index"
  }
}
</config>

<style lang="less" scoped>
.user {
  display: flex;
  align-items: top;
  van-image {
    margin-right: 5px;
  }
  label {
    display: inline-block;
    padding: 0 5px;
  }
}
.comment {
  margin: -10px 0 0 40px;
}
.reply {
  // margin-left: 40px;
}
</style>
