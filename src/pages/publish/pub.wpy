<template>
  <view>
    <van-cell-group>
      <van-field
        type="textarea"
        :autosize="{minHeight:100}"
        :value="form.introduction"
        placeholder="简单介绍一下..."
        :border="true"
      />
      <van-cell>
        <van-uploader
          :file-list=" imgList "
          @after-read="afterRead"
          @oversize="oversize"
          multiple
          max-size="1048576"
          max-count="9"
        />
      </van-cell>

      <van-cell
        title="分类"
        @click="showPopup=true"
      >
        {{classFormatter}}
      </van-cell>
      <van-cell
        title="成色"
        @click="showPopup=true"
      >
        {{classFormatter}}
      </van-cell>
      <van-cell
        title="功能"
        @click="showPopup=true"
      >
        {{classFormatter}}
      </van-cell>
      <van-cell title="价格">
        <van-field
          label="￥"
          type="number "
          :value="form.price"
          :border="true"
          input-align="right"
        />
      </van-cell>
    </van-cell-group>
    <van-button
      type="primary"
      custom-style="width:70%;display: flex;align-items: center;margin:50px"
    >发布</van-button>

    <!-- 弹出层 -->
    <van-popup
      :show="showPopup"
      @close="onClose"
      position="bottom"
    >
      <van-picker
        type="textarea"
        title="分类"
        :show-toolbar="true"
        :columns="classOptions"
        @change="onClassChange"
        @confirm="onConfirm"
        value-key="label"
      />
    </van-popup>
  </view>
</template>

<script>
import wepy from '@wepy/core'
import Toast from '../../components/vant/toast/toast'

const classes = {
  图书: ['教辅', '小说', '社科'],
  美妆: ['粉底', '眼影', '腮红']
}
wepy.component({
  props: {},
  data: {
    classes: [],
    value: '2121',
    imgList: [],
    testData: ['a', 'b', 'c'],
    form: {
      introduction: '',
      conditon: undefined,
      ability: undefined
    },
    showPopup: false,
    classOptions: [
      {
        values: Object.keys(classes)
      },
      {
        values: classes['图书']
      }
    ],
    conditonOptions: [
      {
        value: 0,
        label: '全新'
      },
      {
        value: 1,
        label: '几乎全新'
      },
      {
        value: 2,
        label: '轻微使用痕迹'
      },
      {
        value: 3,
        label: '明显使用痕迹'
      }
    ],
    abilityOptions: [
      {
        value: 0,
        label: '功能完好无瑕疵'
      },
      {
        value: 1,
        label: '有瑕疵，不影响使用'
      },
      {
        value: 2,
        label: '有明显瑕疵'
      },
      {
        value: 3,
        label: '无法正常使用'
      }
    ]
  },
  computed: {
    classFormatter() {
      return this.classes.join('/')
    }
  },
  methods: {
    afterRead($event) {
      let { file } = $event.$wx.detail
      console.log(file)
    },
    oversize() {
      Toast('图片大小不能超过1M！')
    },
    onClassChange($event) {
      const { picker, value, index } = $event.$wx.detail
      console.log({ picker, value, index })
      picker.setColumnValues(1, classes[value[0]])
    },
    onClose() {
      this.showPopup = false
    },
    onChange($event) {
      this.form.introduction = $event.$wx.detail
    },
    onConfirm($event) {
      const { value, index } = $event.$wx.detail
      this.classes = value
      this.form.class = index
      this.showPopup = false
    }
  }
})
</script>
<config>
{
  usingComponents:{
    'van-field':'../../components/vant/field',
    'van-button':'../../components/vant/button',
    'van-cell-group':'../../components/vant/cell-group',
    'van-cell':'../../components/vant/cell',
    'van-uploader':'../../components/vant/uploader',
    'van-picker':'../../components/vant/picker',
    'van-popup':'../../components/vant/popup',

  }
}
</config>

<style>
.test {
  position: fixed;
  bottom: 0;
  left: 0;
}
</style>
