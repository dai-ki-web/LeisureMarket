
<template>
  <view>
    <navBar />

    <!-- 头像名字加关注 -->
    <view class="publisherBar">
      <van-image
        fit="contain"
        width="3rem"
        height="3rem"
        round
        custom-class="avatar"
        :src="publisherInfo.avatarUrl"
      />
      {{publisherInfo.nickName}}
      <van-button>关注</van-button>
    </view>

    <!-- 商品信息 -->
    <view class="goods">
      <view>￥{{priceFomatter}}</view>
      <view>{{form.introduction}}</view>
      <view>
        <van-image
          width="100%"
          fit="widthFix"
          v-for="(img,index) in form.tempImgs"
          :src="img"
          :key="'img'+index"
        />
      </view>
      <!-- 时间 浏览量、收藏量 -->
      <view>
        {{form.timeStamp}}发布
        {{form.view}}次浏览
      </view>
    </view>

    <!-- 留言评论区 -->
    <view id="comment">
      <!-- 标题 -->
      <view style="font-size:24px;font-weight:600">互动({{comments.length}})</view>
      <!-- 点击留言 -->

      <!-- 以往留言 -->
      <view>
        <comment-item
          v-for="item in comments"
          :key="item._id"
          :commentId="item._id"
          :userId="item.userId"
          :avatar="item.avatarUrl"
          :nickName="item.nickName"
          :content="item.value"
          :time="item.createTime"
          @click="toReply(item._id,item.userId,item.nickName)"
        >{{item.createTime}}</comment-item>

        <van-empty
          v-if="comments.length===0"
          class="custom-image"
          image="https://img.yzcdn.cn/vant/custom-empty-image.png"
          description="还没有人评论噢"
        />
      </view>
    </view>
    <!-- 占位 -->
    <view style="height:85px"></view>

    <van-goods-action>
      <view
        v-if="!input"
        :show="!input"
        style="flex:5;padding-left:10px"
      ><input
          v-model="commentValue"
          class="comment"
          :placeholder="placeholder"
          adjust-position
          :focus="!input"
          confirm-type="send"
          @confirm="onSubmit"
        />
      </view>

      <van-goods-action-icon
        icon="chat-o"
        text="留言"
        v-if="input"
        @click="toAsk"
      />
      <van-goods-action-icon
        icon="cart-o"
        text="购物"
        v-if="!input"
        @click="input=true"
      />
      <van-goods-action-icon
        icon="cart-o"
        text="购物车"
        :info="countDownFormatter"
        @tap="toCartPage"
        v-if="input"
      />
      <van-goods-action-button
        text="加入购物车"
        type="warning"
        @tap="addToCart"
        v-if="input"
      />
      <van-goods-action-button
        text="立即购买"
        @tap="toPurchase"
        v-if="input"
      />
    </van-goods-action>
  </view>
</template>

<script>
import wepy from '@wepy/core'
import {
  updateView,
  uploadComment,
  getGoodsDetails,
  getGoodsComments,
  uploadReply
} from '@/api.js'
import globalData from '@/globalData.js'
import moment from 'moment'
import eventHub from '@/common/eventHub'

wepy.page({
  data: {
    countDown: 0,
    dataId: '',
    form: {},
    publisherInfo: {},
    comments: [],
    input: true,
    placeholder: '问问细节',
    mode: 0, // 提问 0   |  回答 1
    context: '',
    replyTo: {},
    commentValue: ''
  },
  computed: {
    countDownFormatter() {
      if (this.countDown) {
        return moment(this.countDown).format('mm:ss')
      }
    },
    priceFomatter() {
      let price = this.form.price
      return (price / 100).toFixed(2)
    }
  },
  methods: {
    // 点击立即购买
    toPurchase() {
      wx.navigateTo({
        url: `/pages/goods/purchase/index?dataIds=${[this.dataId]}`
      })
    },
    // 点击加入购物车
    async addToCart() {
      console.log(this.dataId)
      globalData.cart.push(this.dataId)
      // 更新定时器
      eventHub.$emit('addToCart')
    },
    // 去购物车页
    toCartPage() {
      wx.switchTab({
        url: '/pages/cart/index'
      })
    },

    // 发送评论
    async onSubmit(e) {
      let { value } = e.$wx.detail
      // 清空输入框
      this.commentValue = ''
      // 将评论传入数据库
      let { avatarUrl, nickName } = await globalData.userInfo()
      let res
      // 如果mode为1
      if (this.mode) {
        let replyTo = this.replyTo
        res = await uploadReply(
          {
            value,
            avatarUrl,
            nickName,
            ...replyTo
          },
          this.dataId
        )
      } else {
        // 如果mode为0
        let reply2UserId = this.publisherInfo.userId
        res = await uploadComment(
          {
            value,
            avatarUrl,
            nickName,
            reply2UserId
          },
          this.dataId
        )
      }

      if (res) {
        // 发送成功
        // 刷新数据
        let comments = await getGoodsComments({ id: this.dataId })
        // 通知子组件刷新
        eventHub.$emit('upgrade')
        this.comments = comments
      } else {
        // 弹框报错！
      }
    },
    // 问问细节
    toAsk() {
      this.input = false
      this.placeholder = '问问细节'
      this.mode = 0
    },
    // 点击回复已有评论
    toReply(reply2CommentId, reply2UserId, reply2Name) {
      this.input = false
      this.placeholder = `回复@${reply2Name}`
      this.mode = 1
      this.replyTo = { reply2CommentId, reply2UserId, reply2Name }
    }
  },
  async onLoad(option) {
    this.dataId = option.dataId

    // 监听倒计时更新
    eventHub.$on('updateCountDown', time => {
      this.countDown = time
    })

    // 监听楼中回复
    eventHub.$on('replyToReply', res => {
      let { commentId, userId, name } = res
      this.toReply(commentId, userId, name)
    })

    // 获取商品信息
    let res = await getGoodsDetails({ id: this.dataId })
    let { goods, publisher } = res
    // 获取评论数据
    let comments = await getGoodsComments({ id: this.dataId })

    // 时间戳格式转换
    let time = moment(goods.timeStamp).format('YYYY-MM-DD')
    goods.timeStamp = time

    this.form = goods
    this.publisherInfo = publisher
    this.comments = comments
  },
  async onShow() {},
  onUnload() {
    // 页面卸载时修改数据的浏览量数据
    console.log('out!')
    updateView(this.dataId, this.form.view)
  }
})
</script>
<config>
{
  usingComponents: {
    "van-image": "~@/components/vant/image",
    "van-button": "~@/components/vant/button",
    "van-goods-action": "~@/components/vant/goods-action",
    "van-goods-action-icon": "~@/components/vant/goods-action-icon",
    "van-goods-action-button": "~@/components/vant/goods-action-button",
    "navBar":"~@/components/navBar/index",
    "van-count-down": "~@/components/vant/count-down",
    "van-popup": "~@/components/vant/popup",
    "van-field": "~@/components/vant/field",
    "van-empty": "~@/components/vant/empty",
    "comment-item": "~@/components/comment-item/index",

  }
}
</config>

<style lang="less" scoped>
.publisherBar {
  display: flex;
  align-items: center;
  .avatar {
    margin-right: 5px;
  }
}
.comment {
  margin: 0 auto;
  width: 90%;
  height: 17px;
  background-color: #eee;
  border-radius: 15px;
  padding: 3px 10px;
  font-size: 14px;
}

van-goods-action-icon {
  flex: 1;
}
van-goods-action-button {
  flex: 2 !important;
}
</style>
